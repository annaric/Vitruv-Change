name: JacocoNew

# workflow triggers
on:
  # manually
  workflow_dispatch:
  workflow_call:
  # PRs on `main`
  pull_request:
    #branches:
    #- main

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      actions: write
      checks: write
      id-token: write
      issues: write
      packages: read
      statuses: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
        
      # setup Java and cache Maven dependencies
      - name: Setup Java
        uses: actions/setup-java@v3.13.0
        with:
          distribution: 'temurin'
          java-version: '17'
          check-latest: true
          cache: 'maven'

      # run Maven build
      - name: Maven Build
        run: mvn clean org.jacoco:jacoco-maven-plugin:0.8.8:prepare-agent verify org.jacoco:jacoco-maven-plugin:0.8.9:report-aggregate
      
      - name: Test moving jacoco reports
        run:  rm -rf target/ && mkdir maintarget && cp -r report/target/* maintarget/

      - name: JaCoCo Code Coverage Report
        id: jacoco_reporter
        uses: PavanMudigonda/jacoco-reporter@v4.9
        with:
          coverage_results_path: ${{ github.workspace }}/maintarget/jacoco-reports/jacoco.xml
          coverage_report_name: Coverage
          coverage_report_title: JaCoCo
          github_token: ${{ secrets.GITHUB_TOKEN }}
          skip_check_run: false
          minimum_coverage: 80
          fail_below_threshold: false
          publish_only_summary: false
      
      # Publish Coverage Job Summary  # Optional
     - name: Add Coverage Job Summary
       run: echo "${{ steps.jacoco_reporter.outputs.coverageSummary }}" >> $GITHUB_STEP_SUMMARY
          
      # uploads the coverage-report.md artifact  # Optional

     - name: Upload Code Coverage Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-report-markdown
          path: */coverage-results.md 
          retention-days: 1  
      
      - name: Stage Build Results
        run: mkdir staging && cp -r ${{ github.workspace }}/maintarget/* staging/
        
       #upload staged packages
      - name: Upload Build Results
        uses: actions/upload-artifact@v3.1.3
        with:
          name: Build Results
          path: staging/