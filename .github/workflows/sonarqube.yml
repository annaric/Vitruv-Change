name: SonarBuild

on:
  push:
    branches:
      - build/pure-maven


jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions: read-all
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: mvn -B clean org.jacoco:jacoco-maven-plugin:0.8.8:prepare-agent verify org.jacoco:jacoco-maven-plugin:0.8.9:report org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Vitruv -Dsonar.projectName='Vitruv' -Dsonar.jacoco.reportPath='report/target/site/jacoco/jacoco.xml'
      #- name: Posting information About the Progress
        #run: |
          #link="dashboard http://6cb96fc3-7048-4484-9038-61921e7f6ae1.ka.bw-cloud-instance.org:9000/"
          #echo '::warning file=app.js,line=10,col=15::$link"
      - name: API Request
        id: api-request
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ secrets.SONAR_PROJECT_STATUS_API_URL }}
          customHeaders: '{"Authorization": "Bearer ${{ secrets.SONAR_TOKEN }}"}'
          bearerToken: ${{ secrets.SONAR_TOKEN }}
          method: 'GET'
      - name: Show API response
        run: |
          echo ${{ steps.api-request.outputs.response }}
      - name: Fail Pipeline if QualityGate fails
        if: ${{ fromJson(steps.api-request.outputs.response).projectStatus.status == 'ERROR' }}
        uses: actions/github-script@v6
        with:
          script: |
            core.setFailed('SonarQube Quality Gate Failed! For more Information visit the dashboard and enter your admin Credentials to get access to detailed Information.')