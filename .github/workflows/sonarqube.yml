name: SonarBuild

on:
  push:
    branches:
      - build/pure-maven


jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions: read-all
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: mvn -B clean org.jacoco:jacoco-maven-plugin:0.8.8:prepare-agent verify org.jacoco:jacoco-maven-plugin:0.8.9:report org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Vitruv -Dsonar.projectName='Vitruv' #-Dsonar.jacoco.reportPath='report/target/jacoco-reports/jacoco.exec 
      - name: API Request
        id: api-request
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ secrets.SONAR_PROJECT_STATUS_API_URL }}
          customHeaders: '{"Authorization": "Bearer ${{ secrets.SONAR_TOKEN }}"}'
          bearerToken: ${{ secrets.SONAR_TOKEN }}
          method: 'GET'
      - name: Show API Response Status
        run: |
          echo "Response Status: ${{ steps.api-request.outputs.response }}"

      - name: Show API Response Data
        run: |
          echo "Response Data: ${{ steps.api-request.outputs.headers }}"